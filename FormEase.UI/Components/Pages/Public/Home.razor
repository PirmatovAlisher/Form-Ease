@page "/"

@rendermode InteractiveServer
@inject ITemplateService TemplateService
@inject TemplateSearchService TemplateSearchService
@inject NavigationManager Navigation

<PageTitle>Home</PageTitle>

<RadzenStack Orientation="Orientation.Vertical">
	<RadzenText Text="Latest Templates" TextStyle="TextStyle.Subtitle2" />
	<RadzenRow Gap="0" class="rz-display-flex justify-content-center">
		@foreach (var template in LatestTemplates)
		{
			<RadzenColumn>
				<NavLink class="text-decoration-none" href="@($"/form-create/{template.Id}")">
					<RadzenCard Variant="Variant.Filled" Style="width: 25%; min-width: 280px;" class="rz-m-2 rz-border-radius-5">
						<RadzenStack Orientation="Orientation.Vertical" Style="width: 100%;" Gap="0.5rem">
							@if (!string.IsNullOrWhiteSpace(template.ImageUrl))
							{
								<img src="@template.ImageUrl" class="carousel-img" />
							}
							else
							{
								<RadzenCard Variant="Variant.Outlined" class="rz-border-radius-2">
									<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center">
										<RadzenIcon Icon="photo" IconStyle="IconStyle.Base" Style="height:115px; width:100%; font-size:90px" />
									</RadzenStack>
								</RadzenCard>
							}
							<RadzenText Text="@template.Title" TextStyle="TextStyle.H6" />
							<RadzenText Text="@template.Creator.FullName" TextStyle="TextStyle.Subtitle2" />
						</RadzenStack>
					</RadzenCard>
				</NavLink>
			</RadzenColumn>
		}
	</RadzenRow>

	<RadzenStack Orientation="Orientation.Horizontal">
		<RadzenCard>
			<RadzenText Text="Popular Templates" TextStyle="TextStyle.Subtitle2" />

			<RadzenDataGrid @ref="grid" TItem="TemplateListDto" Data="PopularTemplates" @bind-Value=@selectedTemps RowSelect="OnSelect"
							AllowRowSelectOnRowClick="true" SelectionMode="DataGridSelectionMode.Multiple" class="rz-border-radius-2"
							AllowSorting="true" AllowPaging="true" PagerHorizontalAlign="HorizontalAlign.Center" PageSize="10">

				<Columns>
					<!-- Template Title -->
					<RadzenDataGridColumn Property="@nameof(TemplateListDto.Title)" TItem="TemplateListDto" Title="Title" Width="60px">
						<Template Context="temp">
							@GetTruncatedText(temp.Title, 25)
						</Template>
					</RadzenDataGridColumn>

					<!-- Template Description -->
					<RadzenDataGridColumn Property="@nameof(TemplateListDto.Description)" TItem="TemplateListDto" Title="Description" Width="120px">
						<Template Context="temp">
							<RadzenMarkdown Text="@GetTruncatedText(temp.Description, 30)" />
						</Template>
					</RadzenDataGridColumn>
					 
					<!-- Template Topic -->
					<RadzenDataGridColumn TItem="TemplateListDto" Title="Topic" Width="60px">
						<Template Context="temp">
							@temp.Topic.Name
						</Template>
					</RadzenDataGridColumn>

					<!-- Template Created Time -->
					<RadzenDataGridColumn Property="@nameof(TemplateListDto.CreatedAt)" TItem="TemplateListDto" Title="Created" Width="60px">
						<Template Context="temp">
							@temp.CreatedAt.ToString("ddd MMM d, yyyy-H:mm")
						</Template>
					</RadzenDataGridColumn>

					<!-- Template Updated Time -->
					<RadzenDataGridColumn Property="@nameof(TemplateListDto.UpdatedAt)" TItem="TemplateListDto" Title="Updated" Width="60px">
						<Template Context="temp">
							@temp.UpdatedAt.ToString("ddd MMM d, yyyy-H:mm")
						</Template>
					</RadzenDataGridColumn>
				</Columns>
			</RadzenDataGrid>
		</RadzenCard>
	</RadzenStack>
	<RadzenStack Orientation="Orientation.Horizontal">
		<RadzenCard Variant="Variant.Outlined" class=" rz-border-radius-2" Style="width: 100%; min-width: 300px;">
			Tag Cloud
			<div style="display: flex; flex-wrap: wrap;">
				@foreach (var tag in PopularTags)
				{
					<RadzenButton Text="@tag.Name"
								  Click="@(() => NavigateToTagSearch(tag.Id))"
								  ButtonStyle="ButtonStyle.Base"
								  Variant="Variant.Flat"
								  class="rz-m-1 no-uppercase rz-border-radius-5" />
				}
			</div>
		</RadzenCard>
	</RadzenStack>
</RadzenStack>

@code {

	private List<TemplateDisplayDto> LatestTemplates = new();
	private List<TemplateListDto> PopularTemplates = new();
	private List<Tag> PopularTags = new();

	RadzenDataGrid<TemplateListDto> grid;

	private IList<TemplateListDto> selectedTemps = new List<TemplateListDto>();


	protected override async Task OnInitializedAsync()
	{
		LatestTemplates = await TemplateService.GetLatestTemplatesAsync(6);
		PopularTemplates = await TemplateService.GetPopularPublicTemplates();
		PopularTags = await TemplateSearchService.GetPopularTagsAsync();
	}

	private void OnSelect(TemplateListDto selected)
	{
		var tempId = selected.Id;

		Navigation.NavigateTo($"/form-create/{tempId}");
	}

	private void NavigateToTagSearch(Guid tagId)
	{
		Navigation.NavigateTo($"/search?tagId={tagId}");
	}

	private string GetTruncatedText(string text, int maxLength = 30)
	{
		return text.Length > maxLength ? text.Substring(0, maxLength) + "..." : text;
	}
}

<style>
	/* Uniform image size */
	.carousel-img {
		width: 100%;
		min-width: 250px;
		height: 150px;
		object-fit: cover;
		border-radius: 8px;
	}

</style>