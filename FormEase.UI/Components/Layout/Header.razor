@rendermode @(new InteractiveServerRenderMode(prerender : false))

<RadzenHeader class="rz-display-flex justify-content-between px-1">

	<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
		<RadzenSidebarToggle Click="@(OnToggleMenu)" />
		<RadzenLabel Text="Form-Ease"/>
	</RadzenStack>

	<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="1rem">
		<RadzenButton Icon="forum" Variant="Variant.Text" ButtonStyle="ButtonStyle.Base" Size="ButtonSize.Medium" />
		<RadzenAppearanceToggle />
		<RadzenProfileMenu>
			<Template>
				<RadzenGravatar Email="user@example.com">
				</RadzenGravatar>
			</Template>
			<ChildContent>
				<RadzenProfileMenuItem Text="Buttons" Path="buttons" Icon="account_circle"></RadzenProfileMenuItem>
				<RadzenProfileMenuItem Text="Menu" Path="menu" Icon="line_weight"></RadzenProfileMenuItem>
				<RadzenProfileMenuItem Text="FileInput" Path="fileinput" Icon="attach_file"></RadzenProfileMenuItem>
				<RadzenProfileMenuItem Text="Dialog" Path="dialog" Icon="perm_media"></RadzenProfileMenuItem>
				<RadzenProfileMenuItem Text="Notification" Path="notification" Icon="announcement"></RadzenProfileMenuItem>
			</ChildContent>
		</RadzenProfileMenu>
	</RadzenStack>

</RadzenHeader>

@code {
	[Parameter]
	public EventCallback<bool> ToggleMenu { get; set; }

	private async Task OnToggleMenu()
	{
		await ToggleMenu.InvokeAsync();
	}
}